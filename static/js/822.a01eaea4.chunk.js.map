{"version":3,"file":"static/js/822.a01eaea4.chunk.js","mappings":"sMACA,QAAyB,wBAAzB,EAAiE,+BAAjE,EAAiH,gC,aCKjH,MAoDA,EApDgBA,KACd,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,OACbC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAiBnC,OAfAK,EAAAA,EAAAA,YAAU,KAYHT,GAXLU,iBACEJ,GAAW,GACX,IACE,MAAMK,QAAiBC,EAAAA,EAAAA,IAAkBZ,GACzCG,EAAeQ,EAASE,QAK1B,CAJE,MAAON,GACPC,EAASD,EAAMO,QACjB,CAAC,QACCR,GAAW,EACb,CACF,CAEAS,EAAc,GACb,CAACf,KAEFgB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGb,IAAWc,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAClBb,IAASS,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,UAAQX,MACtBF,IAAYE,IACZY,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SACIhB,EAAYmB,QAMZF,EAAAA,EAAAA,KAAA,OAAAD,SACGhB,EAAYoB,KAAIC,IAEbP,EAAAA,EAAAA,MAAA,OAAqBQ,UAAWC,EAAcP,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,QAAMK,UAAWC,EAAqBP,SACnCK,EAAOG,UAEVP,EAAAA,EAAAA,KAAA,KAAGK,UAAWC,EAAsBP,SAAEK,EAAOI,YAJrCJ,EAAOK,SARvBT,EAAAA,EAAAA,KAAA,QAAAD,SAAM,4EAoBX,C","sources":["webpack://react-homework-template/./src/components/pages/movies/Reviews.module.css?6384","components/pages/movies/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"review\":\"Reviews_review__ki37U\",\"review_author\":\"Reviews_review_author__asoBS\",\"review_content\":\"Reviews_review_content__xjxKo\"};","import { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../../TheMovieDatabaseAPI';\nimport { useEffect, useState } from 'react';\nimport Loader from '../../Loader/Loader';\nimport styles from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsList, setReviewsList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchReviews() {\n      setLoading(true);\n      try {\n        const response = await fetchMovieReviews(movieId);\n        setReviewsList(response.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (!movieId) return;\n    fetchReviews();\n  }, [movieId]);\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <span>Error: {error}</span>}\n      {!loading && !error && (\n        <>\n          {!reviewsList.length ? (\n            <span>\n              There are no reviews for this movie. Be the first one to leave\n              one!\n            </span>\n          ) : (\n            <div>\n              {reviewsList.map(review => {\n                return (\n                  <div key={review.id} className={styles.review}>\n                    <span className={styles.review_author}>\n                      {review.author}\n                    </span>\n                    <p className={styles.review_content}>{review.content}</p>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["Reviews","movieId","useParams","reviewsList","setReviewsList","useState","loading","setLoading","error","setError","useEffect","async","response","fetchMovieReviews","results","message","fetchReviews","_jsxs","_Fragment","children","_jsx","Loader","length","map","review","className","styles","author","content","id"],"sourceRoot":""}